>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

"""
Test file for the class Basegeometry
All tests must pass
You can test it with the command "python3 -m doctest -v ./tests/7-base_geometry.txt | tail -2"
"""
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("my_int", True)
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", "john")
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", [3])
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", (3,))
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", {3, 4})
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", None)
Traceback (most recent call last):
    ...
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", -1)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
    ...
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int")
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator()
Traceback (most recent call last):
    ...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator(12, 12)
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented
